
@model MongoDB.Bson.BsonDocument
@{ 
    var jsonWriterSettings = new MongoDB.Bson.IO.JsonWriterSettings { OutputMode = MongoDB.Bson.IO.JsonOutputMode.Strict };
}

@this.Html.Raw(this.Model.TryGetValue("html"))

<button class="btn-block btn btn-primary" id="btn-save" type="button">保存</button>
@this.Model.TryGetValue("data").ToJson(jsonWriterSettings)

@section Scripts
{
    <script>
        var _id = "@this.Model.TryGetValue("_id").ToString()"
        var _dataID = "@this.Model.TryGetValue("data").AsBsonDocument.TryGetValue("_id").ToString()"
        var saveData = function (obj) {
            $.ajax({
                url: '@this.Url.Content("~/Form/Fill")' + '?id=' + _id + '&dataID=' + _dataID,
                type: 'post',
                contentType: 'application/json',
                data: JSON.stringify(obj),
                success: function () {

                }
            })
        }
        $(function () {
            $("#btn-save").click(function () {
                var obj = {};
                $("input").each(function (index, element) {
                    var $element = $(element);
                    var name = $element.attr("name");
                    var type = $element.attr("type");
                    var value = obj[name];
                    if (type == "checkbox") {
                        value = value ? value : []
                        if (element.checked)
                            value.push($element.val())
                    } else {
                        value = $element.val()
                    }
                    obj[name] = value;
                });
                saveData(obj)
            });
        })
    </script>
}