<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Hero.WebUI</title>
    <environment include="Development">
        <link rel="stylesheet" href="~/Libraries/bootstrap/3.3.7/css/bootstrap.css" />
    </environment>
    <environment exclude="Development">
        <link rel="stylesheet" href="https://ajax.aspnetcdn.com/ajax/bootstrap/3.3.7/css/bootstrap.min.css"
              asp-fallback-href="~/Libraries/bootstrap/3.3.7/css/bootstrap.min.css"
              asp-fallback-test-class="sr-only" asp-fallback-test-property="position"
              asp-fallback-test-value="absolute" />
    </environment>
    <style>
        html, body { width: 100%; height: 100%; }
    </style>
    @this.RenderSection("Styles", false)
</head>
<body>
    @this.RenderBody()
    <environment include="Development">
        <script src="~/Libraries/jquery/jquery-3.2.1.js"></script>
        <script src="~/Libraries/bootstrap/3.3.7/js/bootstrap.js"></script>
    </environment>
    <environment exclude="Development">
        <script src="https://ajax.aspnetcdn.com/ajax/jquery/jquery-2.2.0.min.js"
                asp-fallback-src="~/Libraries/jquery/jquery-3.2.1.min.js"
                asp-fallback-test="window.jQuery"
                crossorigin="anonymous"
                integrity="sha384-K+ctZQ+LL8q6tP7I94W+qzQsfRV2a+AfHIi9k8z8l9ggpc8X+Ytst4yBo/hH+8Fk">
        </script>
        <script src="https://ajax.aspnetcdn.com/ajax/bootstrap/3.3.7/bootstrap.min.js"
                asp-fallback-src="~/Libraries/bootstrap/3.3.7/js/bootstrap.min.js"
                asp-fallback-test="window.jQuery && window.jQuery.fn && window.jQuery.fn.modal"
                crossorigin="anonymous"
                integrity="sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa">
        </script>
    </environment>
    <script>
        (function ($, undefined) {
            $.fn.SerializeData = function () {
                var obj = {}
                this.find('input').each(function (index, element) {
                    var $element = $(element);
                    var name = $element.attr('name');
                    if (!name) {
                        return;
                    }
                    var type = $element.attr('type');
                    var value = obj[name];
                    if (type == 'checkbox') {
                        value = value ? value : []
                        if (element.checked)
                            value.push($element.val())
                    } else if (type == 'radio') { 
                        if (element.checked)
                            value = $element.val()
                    } else {
                        value = $element.val()
                    }
                    obj[name] = value === undefined ? null : value;
                })
                return obj
            }

            $.fn.FillData = function (data) {
                for (var name in data) {
                    var value = data[name];
                    var $element = this.find("[name=" + name + "]");
                    if ($element.length == 0) {

                    } else if ($element.is("input")) {
                        var type = $element.attr("type")
                        if (type == "checkbox") {

                        } else if (type == "radio") {

                        } else {
                            $element.val(value)
                        }
                    } else if ($element.is("select")) {

                    } else if ($element.is("textarea")) {
                        $element.val(value)
                    }
                }
            }
        })(jQuery)
    </script>
    @this.RenderSection("Scripts", false)
</body>
</html>
