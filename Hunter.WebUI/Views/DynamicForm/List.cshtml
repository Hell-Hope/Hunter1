@model Hunter.Entities.Form

@section Styles
{
	<environment include="Development">
		<link rel="stylesheet" href="~/Libraries/bootstrap-table/1.11.1/bootstrap-table.css" />
	</environment>
	<environment exclude="Development">
		<link rel="stylesheet" href="~/Libraries/bootstrap-table/1.11.1/bootstrap-table.min.css" />
	</environment>
}

<div style="padding: 0px 2em;">
    <div id="toolbar" class="btn-group">
        <button id="btn-insert" type="button" class="btn btn-default">
            <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>
            <span>新增</span>
        </button>
        <button id="btn-update" type="button" class="btn btn-default">
            <span class="glyphicon glyphicon-pencil" aria-hidden="true"></span>
            <span>修改</span>
        </button>
        <button id="btn-delete" type="button" class="btn btn-default">
            <span class="glyphicon glyphicon-remove" aria-hidden="true"></span>
            <span>删除</span>
        </button>
    </div>
	<table id="table"></table>
</div>
<div style="display: none" id="initialize-columns">@this.Json.Serialize(this.Model.Columns)</div>

@section Scripts
{
	<environment include="Development">
		<script src="~/Libraries/bootstrap-table/1.11.1/bootstrap-table.js"></script>
	</environment>
	<environment exclude="Development">
		<script src="~/Libraries/bootstrap-table/1.11.1/bootstrap-table.min.js"></script>
	</environment>
    <script>
        var getInitializeColumns = function () {
            var temp = []
            try {
                temp = JSON.parse($('#initialize-columns').text())
                if (!temp)
                    temp = [];
            } catch (e) {
                temp = []
            }
            var result = [{ type: 'checkbox' }]
            for (var i = 0, length = temp.length; i < length; i++) {
                result.push(temp[i])
            }
            return result
        }

        $(function () {
            var options = {
                url: '@this.Url.Content("~/DynamicForm/Query/" + this.Model.ID)',
                columns: getInitializeColumns()
            }
            var $table = $('#table').bootstrapTable($.extend($.BootstrapTable.DEFAULT, options));

			$(window).resize(function () {
				$table.bootstrapTable('resetView', {
					height: $('body').height()
				});
			}).resize()
			var edit = function (id) {
				id = id ? id : ''
				window.top.layer.open({
					type: 2,
					title: '编辑',
					maxmin: false, //开启最大化最小化按钮
					area: ['80%', '80%'],
					content: '@this.Url.Action("Edit", "DynamicForm", new { id = this.Model.ID })' + '?DataID=' + id
				})
				window.top.RefreshList = function () {
					$table.bootstrapTable('refresh');
				}
			}
            $("#btn-insert").click(function () {
                edit('')
			})
			$("#btn-update").click(function () {
				var selections = $table.bootstrapTable('getSelections');
				if (selections.length == 0) {
					window.top.layer.msg('请选择', { icon: 0 });
				} else {
					console.log(selections[0])
					edit(selections[0].ID)
				}
			})
		})
    </script>
}
