@{
    var columns = this.ViewData["Columns"] as List<Hunter.Models.Form.Column>;
}

@section Styles
{
	<environment include="Development">
		<link rel="stylesheet" href="~/Libraries/bootstrap-table/1.11.1/bootstrap-table.css" />
	</environment>
	<environment exclude="Development">
		<link rel="stylesheet" href="~/Libraries/bootstrap-table/1.11.1/bootstrap-table.min.css" />
	</environment>
}

<div id="search-dialog" style="display: none;">
    <table class="table">
        @foreach(var column in columns)
        {
            <tr>
                <td style="width: 100px">
                    <label>@column.Title</label>
                </td>
            @if (column.Find == "$like")
            {
                <td colspan="3">
                    <input type="text" class="form-control" name="@(column.Field + "$like")" />
                </td>
            }
            else if (column.Find == "$range")
            {
                <td>
                    <input type="text" class="form-control" name="@(column.Field + "$gte")" />
                </td>
                <td style="text-align: center; width: 20px;">至</td>
                <td>
                    <input type="text" class="form-control" name="@(column.Field + "$lte")" />
                </td>
            }
            </tr>
        }
    </table>
</div>
<div style="padding: 0px 2em;">
    <div id="toolbar" class="btn-group">
        <button id="btn-insert" type="button" class="btn btn-default">
            <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>
            <span>新增</span>
        </button>
        <button id="btn-update" type="button" class="btn btn-default">
            <span class="glyphicon glyphicon-pencil" aria-hidden="true"></span>
            <span>修改</span>
        </button>
        <button id="btn-progress" type="button" class="btn btn-default">
            <span class="glyphicon glyphicon-pencil" aria-hidden="true"></span>
            <span>进度</span>
        </button>
        <button id="btn-delete" type="button" class="btn btn-default">
            <span class="glyphicon glyphicon-remove" aria-hidden="true"></span>
            <span>删除</span>
        </button>
        <button id="btn-search" type="button" class="btn btn-default">
            <span class="glyphicon glyphicon-search" aria-hidden="true"></span>
            <span>查询</span>
        </button>
        <button id="btn-pdf" type="button" class="btn btn-default">
            <span class="glyphicon glyphicon-file" aria-hidden="true"></span>
            <span>PDF</span>
        </button>
    </div>
	<table id="table"></table>
</div>
<div style="display: none" id="initialize-columns">@this.Json.Serialize(columns)</div>

@section Scripts
{
    <environment include="Development">
        <script src="~/Libraries/bootstrap-table/1.11.1/bootstrap-table.js"></script>
        <script src="~/Libraries/bootstrap-table/1.11.1/locale/bootstrap-table-zh-CN.js"></script>
    </environment>
    <environment exclude="Development">
        <script src="~/Libraries/bootstrap-table/1.11.1/bootstrap-table.min.js"></script>
        <script src="~/Libraries/bootstrap-table/1.11.1/locale/bootstrap-table-zh-CN.min.js"></script>
    </environment>
    <script>
        var getInitializeColumns = function () {
            var temp = []
            try {
                temp = JSON.parse($('#initialize-columns').text())
                if (!temp)
                    temp = [];
            } catch (e) {
                temp = []
            }
            var result = [{ checkbox: true }]
            for (var i = 0, length = temp.length; i < length; i++) {
                result.push(temp[i])
			}
			result.push({ align: 'center', valign: 'middle', title: '当前节点', field: 'CurrentNode.Name', width: '150px' })
            return result
        }

        $(function () {
            var options = $.extend($.BootstrapTable.DEFAULT, {
                url: '@this.Url.Action("Query", new { id = this.ViewData["ID"] })',
                columns: getInitializeColumns()
            })
            var $table = $('#table').bootstrapTable(options);

			$(window).resize(function () {
				$table.bootstrapTable('resetView', {
					height: $('body').height()
				});
			}).resize()
			var edit = function (id) {
				id = id ? id : ''
				window.top.layer.open({
					type: 2,
					title: '编辑',
					maxmin: false, //开启最大化最小化按钮
					area: ['90%', '90%'],
					content: '@this.Url.Action("Edit", new { id = this.ViewData["ID"] })' + '?DataID=' + id
				})
				window.top.RefreshList = function () {
					$table.bootstrapTable('refresh');
				}
			}
            $('#btn-insert').click(function () {
                edit('')
			})
			$('#btn-update').click(function () {
				var selections = $table.bootstrapTable('getSelections');
				if (selections.length == 0) {
					window.top.layer.msg('请选择', { icon: 0 });
				} else {
					edit(selections[0].ID)
				}
            })
            $('#btn-progress').click(function () {
                var selections = $table.bootstrapTable('getSelections');
                if (selections.length == 0) {
                    window.top.layer.msg('请选择', { icon: 0 });
                } else {
                    var id = selections[0].ID
				    window.top.layer.open({
					    type: 2,
					    title: '查看进度',
					    maxmin: false, //开启最大化最小化按钮
					    area: ['90%', '90%'],
					    content: '@this.Url.Action("Progress", new { id = this.ViewData["ID"] })' + '?DataID=' + id
				    })
                }
            })
            $('#btn-delete').click(function () {
                var selections = $table.bootstrapTable('getSelections');
                if (selections.length == 0) {
                    window.top.layer.msg.warning('请选择')
                } else {
                    $.ajax({
                        url: '@this.Url.Action("Remove", new { id = this.ViewData["ID"] })' + '?DataID=' + selections[0].ID,
                        type: 'post',
                        success: function () {
                            window.top.layer.msg.success('删除成功')
                            $table.bootstrapTable('refresh');
                        }
                    })
                }
            })
            var _searchCondition = {}
            $('#btn-search').click(function () {
                window.GetSearchCondition = function () {
                    return _searchCondition;
                }
                window.top.layer.open({
					type: 1,
					title: '查询',
					maxmin: false, //开启最大化最小化按钮
					area: ['500px', '500px'],
                    content: $('#search-dialog').html(),
                    btn: ['查询'],
                    success: function (layero, index) {
                        layero.fillData(_searchCondition)
                    },
                    yes: function (index, layero) {
                        _searchCondition = layero.serializeData();
                        $table.bootstrapTable('refresh');
                        window.top.layer.close(index)
                    }
				})
            })
            $('#btn-pdf').click(function () {
                var selections = $table.bootstrapTable('getSelections');
                if (selections.length == 0) {
                    window.top.layer.msg('请选择', { icon: 0 });
                } else {
                    var url = '@this.Url.Action("Download", new { id = this.ViewData["ID"] })' + '?type=PDF&DataID=' + selections[0].ID
                    window.open(url)
                }
            })
		})
    </script>
}
